https://www.youtube.com/watch?v=vwj89i2FmG0&t=1135s1. (base) manasaviswanadhapalli@Manasas-MacBook-Pro ~ % brew -versionzsh: command not found: brewfor that first we hav e to set path for homebrew(base) manasaviswanadhapalli@Manasas-MacBook-Pro ~ % export PATH="/opt/homebrew/bin:$PATH"2. Command to install git % brew install git3. Command to find the version Git Ð-version4. Command To update the git% brew upgrade git5. Command to find the personal details% git config6. Command to enter values like name and email % git config --global user.name"Manasa"% git config --global user.emailManaviswa@gmail.com7. Command to see the details % git config --global Ðlist8. Git tracks the files in the staging area9. By default, the repository the git will have master branch to see this by using % git status command. 10.To change this branch name we have to use % git init -b main command now the branch is main-b indicates for branch  11.% rm -rf .git command used to del git  12 For adding files into a git we have to use % git add filename command.     13 to check commits history we have to use this command.        % git log   14 we cannot commit directly if we want to commit we have to this command	% git commit -m "my first git project"   15 if we did any changes in a file after we have to add that into the staging area by using % git add filename this command other we cannot commit that file 16 if we want to see the changes in previous(local) file and current (staging)file we have to use this command.       % git diff 17 if we want to see the changes in previous(staging) file and current (staging)file we must use this command.	 	% git diff Ðstaged18 u means untracked that means the file is not added to the git repository, so we have to add that to the git by using.% git add filename instead of this command we can also use % git add .19 if we want to del a file, we have to use this command.	 % git rm --cached readme.txt*  git clone (copy the link here) command is used to copy the things in git repositoryPushing files from git to github process 20 Command for creating folder % mkdir foldername(git-course)21 if we want to create file in that folder, we have to use this command 	% echo "i am manasa" >> README.MD22 if we want to read the content in that file we have to use this command	% cat (filename)README.MD  23 we have to perform staging for initializing and adding files to the git repository(base) manasaviswanadhapalli@Manasas-MacBook-Pro git-course % git inithint: Using 'master' as the name for the initial branch. This default branch namehint: is subject to change. To configure the initial branch name to use in allhint: of your new repositories, which will suppress this warning, call:hint: hint: 	git config --global init.defaultBranch <name>hint: hint: Names commonly chosen instead of 'master' are 'main', 'trunk' andhint: 'development'. The just-created branch can be renamed via this command:hint: hint: 	git branch -m <name>Initialized empty Git repository in /Users/manasaviswanadhapalli/git-course/.git/(base) manasaviswanadhapalli@Manasas-MacBook-Pro git-course % git add README.MD(base) manasaviswanadhapalli@Manasas-MacBook-Pro git-course % git statusOn branch masterNo commits yetChanges to be committed:  (use "git rm --cached <file>..." to unstage)	new file:   README.MD23 % git branch -m (branch name) main is used to create a branch.Generating key to the git 24 first we must create file and key by using this command.        % ssh-keygen -o       Later it will create file names called id_rsa and id_rsa.pub              So the key will be saved on id_rsa.pub              If we want to see the key we have to use % cat id_rsa.pub.Follow the github origin creation code for creating the github repository. To push file to the git repository we have to use this command.	% git push origin mainWe also need to push tag to repository we have to use this command.	% git push origin v1.0(tag name)Merging two branchesFor creating a branch, we have to use this command. % git checkout -b branchnameTo see the number of branches we have to use this command.	% git branch